Define Baz as
(
  Let Z;
  (Do Z);
);


Define Bar as
(
  Let Y;
  Baz (Do Y);
);

Define Foo as
(
  Let X;
  Set X to X;
  Bar (Print X);
);


Foo 'PASS: Implicit block copying';
Foo 'FAIL: Implicit block copying';
Drop; Do;


Let Y be ();

Define Foo2 as
(
  Let X;
  Set Y to (Print X);
);


Foo2 'PASS: Implicit block copying with mutation'; Let Z be Y;
Foo2 'FAIL: Implicit block copying with mutation'; Let W be Y;
Do Z;
Drop W;

Define A
( Let B;
  Let Foo as (Print B);
  return (Do Foo);
);

Do A 'PASS: Another block copying test';

Define B
( Let B;
  Define Foo as (Print B);
  return (Foo);
);

Do B 'PASS: Another block copying test again';
