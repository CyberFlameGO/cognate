!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
COGNATE_C	headers/cognate.c	2;"	d	file:
DEBUG_C	headers/debug.c	2;"	d	file:
ERROR_C	headers/error.c	2;"	d	file:
FUNC_C	headers/func.c	2;"	d	file:
INITIAL_LIST_SIZE	headers/stack.c	12;"	d	file:
IO_C	headers/io.c	2;"	d	file:
STACK_C	headers/stack.c	2;"	d	file:
TYPE_C	headers/type.c	2;"	d	file:
WHERE	headers/debug.c	3;"	d	file:
attempt_tco	headers/cognate.c	23;"	d	file:
block	headers/type.c	/^typedef enum {block, number, list} cognate_type;$/;"	e	enum:__anon1	file:
call	headers/func.c	23;"	d	file:
check_type	headers/type.c	/^static cognate_object check_type(cognate_type expected_type, cognate_object object)$/;"	f	file:
cleanup	headers/cognate.c	/^static void cleanup()$/;"	f	file:
cognate_define	headers/cognate.c	13;"	d	file:
cognate_func	headers/func.c	10;"	d	file:
cognate_let	headers/cognate.c	17;"	d	file:
cognate_list	headers/type.c	/^struct __attribute__((packed)) cognate_list$/;"	s	file:
cognate_list	headers/type.c	/^typedef struct cognate_list   cognate_list;$/;"	t	typeref:struct:cognate_list	file:
cognate_object	headers/type.c	/^struct __attribute__((packed)) cognate_object$/;"	s	file:
cognate_object	headers/type.c	/^typedef struct cognate_object cognate_object;$/;"	t	typeref:struct:cognate_object	file:
cognate_type	headers/type.c	/^typedef enum {block, number, list} cognate_type;$/;"	t	typeref:enum:__anon1	file:
cognate_var	headers/func.c	14;"	d	file:
cognate_var_obj	headers/func.c	19;"	d	file:
expand_stack	headers/stack.c	/^static void expand_stack(size_t new_size)$/;"	f	file:
init	headers/cognate.c	/^static void init()$/;"	f	file:
init_stack	headers/stack.c	/^static void init_stack()$/;"	f	file:
list	headers/type.c	/^    struct cognate_list *list;$/;"	m	union:cognate_object::__anon2	typeref:struct:cognate_object::__anon2::cognate_list	file:
list	headers/type.c	/^typedef enum {block, number, list} cognate_type;$/;"	e	enum:__anon1	file:
lookup_type	headers/type.c	/^static char* lookup_type(cognate_type type)$/;"	f	file:
main	examples/fib.c	/^int main()$/;"	f
main	examples/random.c	/^int main()$/;"	f
main	examples/range.c	/^int main()$/;"	f
main	examples/square.c	/^int main()$/;"	f
malloc	headers/stack.c	9;"	d	file:
number	headers/type.c	/^    double number;$/;"	m	union:cognate_object::__anon2	file:
number	headers/type.c	/^typedef enum {block, number, list} cognate_type;$/;"	e	enum:__anon1	file:
peek	headers/stack.c	20;"	d	file:
peek_object	headers/stack.c	/^static cognate_object peek_object(void)$/;"	f	file:
pop	headers/stack.c	17;"	d	file:
pop_object	headers/stack.c	/^static cognate_object pop_object(void)$/;"	f	file:
print_object	headers/io.c	/^static void print_object (cognate_object object)$/;"	f	file:
push	headers/stack.c	14;"	d	file:
push_object	headers/stack.c	/^static void push_object(cognate_object object)$/;"	f	file:
realloc	headers/stack.c	10;"	d	file:
stack	headers/stack.c	/^cognate_list stack;$/;"	v
stack_end	headers/stack.c	/^cognate_object* stack_end;$/;"	v
start	headers/type.c	/^  struct cognate_object *start,$/;"	m	struct:cognate_list	typeref:struct:cognate_list::cognate_object	file:
throw_error	headers/error.c	/^noreturn static void throw_error(char* message)$/;"	f	file:
top	headers/type.c	/^                        *top;$/;"	m	struct:cognate_list	typeref:struct:cognate_list::	file:
type	headers/type.c	/^  cognate_type type : 4;$/;"	m	struct:cognate_object	file:
type_error	headers/error.c	/^noreturn static void type_error(char* expected, char* recieved)$/;"	f	file:
